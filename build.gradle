// https://docs.gradle.org/6.1.1/userguide/java_library_plugin.html

plugins {
    id 'java-library'
    id 'io.freefair.aspectj.post-compile-weaving' version '5.1.0'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'de.undercouch.download' version '4.1.2'
    id 'org.owasp.dependencycheck' version '7.1.1'
}

version '0.5.0'

def cleanDbVersion = '0.5.0'

shadowJar{
  mustRunAfter 'generateDao'
  archiveName = "iste-${version}.${extension}"
  manifest {
    attributes 'Main-Class': 'okuken.iste.CommandLineInterface'
  }
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    jcenter()
}

dependencies {
    compileOnly 'net.portswigger.burp.extender:burp-extender-api:2.3'
//    testRuntimeOnly files(System.getProperty("user.home") + '\\AppData\\Local\\Programs\\BurpSuitePro\\burpsuite_pro.jar') // set your local path to burpsuite jar
    testRuntimeOnly files(System.getProperty("user.home") + '\\AppData\\Local\\Programs\\BurpSuiteCommunity\\burpsuite_community.jar')

    implementation files('../iste-plugin-api/build/libs/iste-plugin-api-0.1.1.jar') // https://github.com/okuken/iste-plugin-api

    implementation 'org.mybatis:mybatis:3.5.10'
    implementation 'org.mybatis.dynamic-sql:mybatis-dynamic-sql:1.1.4'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation 'org.mybatis:mybatis-migrations:3.3.11'

    implementation 'org.xerial:sqlite-jdbc:3.32.3'

    implementation "org.aspectj:aspectjrt:1.9.5"

    implementation "org.hibernate.validator:hibernate-validator:7.0.4.Final"
    implementation "org.glassfish:jakarta.el:4.0.2"

    implementation 'org.jsoup:jsoup:1.15.1'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.apache.velocity:velocity-engine-core:2.3'
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
    implementation 'args4j:args4j:2.33'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

test {
    useJUnitPlatform()
}


def buildModuleDir = new File(projectDir, 'buildModule')
def tmpDir = new File(buildDir, 'tmp')
task createDir {
    mustRunAfter 'clean'
    doLast {
        [buildModuleDir, tmpDir].each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
    }
}

def isteCleanDbFile = new File(tmpDir, 'iste_clean.db')
task makeCleanDb {
    dependsOn 'createDir'

    def isteJarUrl = "https://github.com/okuken/integrated-security-testing-environment/releases/download/v${cleanDbVersion}/iste-${cleanDbVersion}.jar"
    def isteJarFile = new File(buildModuleDir, "iste-${cleanDbVersion}.jar")

    doLast {
        download {
            src isteJarUrl
            dest buildModuleDir
            overwrite false
        }

        exec {
            commandLine 'java', '-jar', isteJarFile, '-makeCleanDb', isteCleanDbFile, '-f'
        }
    }
}

task generateDao {
    dependsOn 'createDir'
    mustRunAfter 'makeCleanDb'

    def generatorConfig = new File(projectDir, "src/main/resources/generatorConfig.xml")

    def mbgJarUrl = "https://repo1.maven.org/fromsearch?filepath=org/mybatis/generator/mybatis-generator-core/1.4.0/mybatis-generator-core-1.4.0.jar"
    def mbgJar = new File(buildModuleDir, "mybatis-generator-core-1.4.0.jar")
    def jdbcJarUrl = "https://repo1.maven.org/fromsearch?filepath=org/xerial/sqlite-jdbc/3.32.3/sqlite-jdbc-3.32.3.jar"
    def jdbcJar = new File(buildModuleDir, "sqlite-jdbc-3.32.3.jar")

    doLast {
        download {
            src([mbgJarUrl, jdbcJarUrl])
            dest buildModuleDir
            overwrite false
        }

//      ant.replace(file: generatorConfig, token: '@@@CLEAN_DB_FILE_PATH@@@', value: "${isteCleanDbFile}")

        exec {
            commandLine 'java', '-cp', "${jdbcJar};${mbgJar}", 'org.mybatis.generator.api.ShellRunner', '-configfile', generatorConfig, '-overwrite', '-verbose'
        }
    }
}

task generateInfo {
    def infoFile = new File(projectDir, "src/main/resources/iste.properties")

    doLast {
        infoFile.write "version=v${version}"
    }
}

task buildISTE(dependsOn: [clean, createDir, makeCleanDb, generateDao, generateInfo, shadowJar])

defaultTasks 'buildISTE'
